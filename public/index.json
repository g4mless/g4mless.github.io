
      
      
      
    
      
      
      
    [{"authors":null,"categories":null,"content":"Kalian baru aja bisa bikin aplikasi web simpel pakai html, css, dan javascript, terus kalian pengen bikin aplikasi web kalian jadi aplikasi Android ü§î. Tentunya bisa dengan komponen WebView yang ada di Android itu sendiri. Sebelum mengikuti tutorial ini, kalian seminimal mungkin paham dasar dari penggunaan android studio dan bahasa kotlin. Tanpa basa basi lagi mari kita ke tutorialnya\n1. Bikin Project Baru Klik tombol ‚ÄúNew Project‚Äù Lalu pilih ‚ÄúEmpty Views Activity‚Äù (yang diberi kotak merah) dan klik Next Terakhir kalian tinggal kasih nama aplikasinya dan klik Finish Tunggu beberapa menit sampai proses sync project selesai, lalu kita bisa lanjut ke langkah selanjutnya.\n2. Ubah Kode Layout Setelah project tersinkronisasi, langkah selanjutnya kita mengubah kode layout yang ada di dalam folder res/layout/activity_main.xml Buka foldernya, lalu klik tombol ‚ÄúCode‚Äù(yang di garis panahi) untuk berpindah mode dari Design ke Code.\nlalu ganti semua kodenya dengan kode ini\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;utf-8\u0026#34;?\u0026gt; \u0026lt;RelativeLayout xmlns:android=\u0026#34;http://schemas.android.com/apk/res/android\u0026#34; android:layout_width=\u0026#34;match_parent\u0026#34; android:layout_height=\u0026#34;match_parent\u0026#34;\u0026gt; \u0026lt;WebView android:id=\u0026#34;@+id/webview\u0026#34; android:layout_width=\u0026#34;match_parent\u0026#34; android:layout_height=\u0026#34;match_parent\u0026#34; /\u0026gt; \u0026lt;/RelativeLayout\u0026gt; kode diatas bertujuan untuk merubah view atau halaman di aplikasi android agar full menggunakan webview.\n3. Menambahkan File Kode Web ke Project Aplikasi Klik kanan di folder paling atas, yaitu app, lalu pilih New dan pilih Directory\nlalu pilih folder dengan nama src\\main\\assets di Gradle Source Sets.\nsetelah membuat folder assets kita tinggal masukkan file kode web milik kita.\ndisini atmin pakai project web lama pas masih belajar dasar. Webnya cuma Todo-list simpel menggunakan localStorage. (styles.css-nya minta generate sama AI awkakw)\n4. Panggil index.html ke MainActivity pertama kita perlu tambahkan import untuk webview di MainActivity\nimport android.webkit.WebView lalu kita tambahkan kodenya di dalam class MainActivity seperti ini\nclass MainActivity : AppCompatActivity() { @SuppressLint(\u0026#34;SetJavaScriptEnabled\u0026#34;) override fun onCreate(savedInstanceState: Bundle?) { super.onCreate(savedInstanceState) enableEdgeToEdge() setContentView(R.layout.activity_main) val webview: WebView = findViewById(R.id.webview) webview.settings.javaScriptEnabled = true webview.loadUrl(\u0026#34;file:///android_asset/index.html\u0026#34;) } } Sekarang kita tinggal run saja aplikasinya, baik itu menggunakan hp sendiri maupun emulator.\ndisini sudah terlihat webnya sudah jalan, tapi disini atmin gabisa tambah tugas ke dalam aplikasinya ü§î\nsetelah di cek lagi ternyata buat web todo-list punya atmin di kode webview-nya harus nyalain fitur yang atmin pake, yaitu localStorage. Untungnya cara fix-nya cukup tambahin kode ini dibawah webview.settings.javaScriptEnabled = true\nwebview.settings.domStorageEnabled = true Dan, web todo-list statis atmin sudah jadi .apk dan bisa digunakan selayaknya aplikasi android. Terakhir kalian tinggal build .apk release-nya agar size file .apk bisa lebih kecil dari versi debug.\n","date":1758547729,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1758547729,"objectID":"5aac3cf09d9f6b5e8df94925749ce293","permalink":"http://localhost:1313/post/web_statis_jadi_aplikasi_android/","publishdate":"2025-09-22T20:28:49+07:00","relpermalink":"/post/web_statis_jadi_aplikasi_android/","section":"post","summary":"cara termudah buat webdev pemula bikin aplikasi android.","tags":["dev","tutorial","android-dev"],"title":"Web statis jadi aplikasi android","type":"post"},{"authors":null,"categories":null,"content":"Sebelumnya, saya pernah mencoba membuat blog menggunakan WordPress. Namun, menurut saya WordPress kurang nyaman dipakai kalau kalian penikmat gratisan. Pilihan tema gratisnya terbatas, UI editornya kurang intuitif, dan versi gratisannya juga menampilkan watermark serta widget bawaan WordPress.\nScreenshot Halaman Wordpress g4mless.wordpress.com\nSaat itu saya udah malas buat nyobain wordpress lagi dan juga mengubur niat saya untuk blogging. Sampai akhirnya di hari saya mengetik artikel ini saya teringat ada framework yang sangat ringan yang cocok untuk blogging, yaitu Hugo.\nSecara teknis, Hugo dibangun menggunakan bahasa pemrograman Go. Bahasa ini memang dirancang agar sederhana dan cepat, baik dari segi penggunaan sumber daya maupun penulisan kode. Hugo mewarisi sifat tersebut, sehingga hasilnya adalah generator situs statis yang minimalis, cepat, dan mudah digunakan.\nKeunggulan Hugo Selain ringan dan cepat, Hugo juga memiliki beberapa keunggulan lain:\nBerbasis Markdown. Semua konten berupa file markdown yang buat saya sendiri sebagai developer yang sudah biasa ngetik README.md tidak perlu mempelajari alat tambahan lagi dan dapat langsung diproses menjadi halaman HTML. Proses build yang singkat. Semua berkat mesin dari Hugo sendiri yaitu Go-lang yang memang di desain untuk cepat. Tidak seperti Wordpress yang menggunakan PHP. Fleksibel dalam hosting. Karena output-nya berupa static files, Hugo bisa di-host secara gratis di GitHub Pages, Netlify, atau Vercel. Banyak tema gratis. Ada banyak pilihan tema open-source yang bisa saya katakan lebih bagus daripada tema gratis di wordpress. Di web ini sekarang saya sedang pakai tema github-styles, replika github yang cukup bagus untuk blog Kekurangan Hugo Meskipun Hugo punya banyak kelebihan, ada beberapa hal yang bisa dianggap sebagai kekurangan:\nTidak cocok untuk orang awam. Hugo lebih cocok untuk developer yang sudah berpengalaman daripada orang awam, karena Hugo tidak mempunyai UI khusus seperti wordpress yaitu dashboard ataupun editor. Kalian hanya bisa mengandalkan Code Editor seperti Visual Studio Code dan juga Git untuk kelola webnya. Kurang cocok untuk project besar yang banyak interaksi. Misalnya e-commerce atau aplikasi web interaktif. Untuk kasus seperti itu, CMS dinamis lebih cocok. Penutup Bagi saya, Hugo adalah pilihan yang tepat untuk memulai kembali aktivitas blogging. Karena saya sudah terbiasa menggunakan alat alat developer seperti Visual Studio Code, Git, dan juga format Markdown.\n","date":1758423521,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1758423521,"objectID":"eea42452fc394080acf934dbf9acf0b0","permalink":"http://localhost:1313/post/kenapa_pake_hugo/","publishdate":"2025-09-21T09:58:41+07:00","relpermalink":"/post/kenapa_pake_hugo/","section":"post","summary":"Bukan cuma ringan...","tags":["hugo","blogging"],"title":"Kenapa pake Hugo?","type":"post"}]